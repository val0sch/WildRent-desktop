services:
  client:
    build: ./client
    ports:
      - 3000:3000
    volumes:
      - ./client/src/:/app/src/
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
  server:
    build: ./server
    environment:
      - PORT=4000
    ports:
      - 4000:4000
      - 3001:3001
    expose:
      - 4000
      - 3001
    command: npm run start
    volumes:
      - ./server/src/:/app/src/
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d wildrent -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: wildrent
    ports:
      - 5432:5432
    volumes:
      - wildrent-data:/var/lib/postgresql/data
  adminer:
    image: adminer
    depends_on:
      - db
    restart: always
    ports:
      - 8080:8080

volumes:
  wildrent-data:
